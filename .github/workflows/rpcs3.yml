name: Build RPCS3

defaults:
  run:
    shell: bash
on:
  push:
    branches:
      - master # Only trigger push event on 'master' branch
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  BUILD_REPOSITORY_NAME: ${{ github.repository }}
  BUILD_SOURCEBRANCHNAME: ${{ github.ref_name }}
  BUILD_PR_NUMBER: ${{ github.event.pull_request.number }}
  BUILD_SOURCEVERSION: ${{ github.sha }}
  BUILD_ARTIFACTSTAGINGDIRECTORY: ${{ github.workspace }}/artifacts/

jobs:
  Windows_Build:
    name: RPCS3 Windows
    runs-on: windows-2025
    env:
      COMPILER: msvc
      QT_VER_MAIN: '6'
      QT_VER: '6.9.1'
      QT_VER_MSVC: 'msvc2022'
      QT_DATE: '202505291653'
      LLVM_VER: '19.1.7'
      VULKAN_VER: '1.3.268.0'
      VULKAN_SDK_SHA: '8459ef49bd06b697115ddd3d97c9aec729e849cd775f5be70897718a9b3b9db5'
      CCACHE_SHA: '1f39f3ad5aae3fe915e99ad1302633bc8f6718e58fa7c0de2b0ba7e080f0f08c'
      CCACHE_BIN_DIR: 'C:\ccache_bin'
      CCACHE_DIR: 'C:\ccache'
      CCACHE_INODECACHE: 'true'
      CCACHE_SLOPPINESS: 'time_macros'
      DEPS_CACHE_DIR: ./dependency_cache
      UPLOAD_COMMIT_HASH: 7d09e3be30805911226241afbb14f8cdc2eb054e
      UPLOAD_REPO_FULL_NAME: "RPCS3/rpcs3-binaries-win"
    steps:

      - name: Checkout repository
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Setup NuGet
        uses: nuget/setup-nuget@v2

      - name: Restore NuGet packages
        run: nuget restore rpcs3.sln

      - name: Setup env
        shell: pwsh
        run: |
          echo "QTDIR=C:\Qt\${{ env.QT_VER }}\${{ env.QT_VER_MSVC }}_64" >> ${{ github.env }}
          echo "VULKAN_SDK=C:\VulkanSDK\${{ env.VULKAN_VER }}" >> ${{ github.env }}

      - name: Get Cache Keys
        run: .ci/get_keys-windows.sh

      - name: Restore Build Ccache
        uses: actions/cache/restore@main
        id: restore-build-ccache
        with:
          path: ${{ env.CCACHE_DIR }}
          key: "${{ runner.os }}-ccache-${{ env.COMPILER }}-${{github.run_id}}"
          restore-keys: ${{ runner.os }}-ccache-${{ env.COMPILER }}-

      - name: Restore Dependencies Cache
        uses: actions/cache/restore@main
        id: restore-dependencies-cache
        with:
          path: ${{ env.DEPS_CACHE_DIR }}
          key: "${{ runner.os }}-${{ env.COMPILER }}-${{ env.QT_VER }}-${{ env.VULKAN_SDK_SHA }}-${{ env.CCACHE_SHA }}-${{ hashFiles('llvm.lock') }}"
          restore-keys: ${{ runner.os }}-${{ env.COMPILER }}-

      - name: Download and unpack dependencies
        run: |
          .ci/setup-windows.sh
          .ci/setup-windows-ci-vars.sh win64 msvc

      - name: Export Variables
        run: |
          while IFS='=' read -r key val; do
            # Skip lines that are empty or start with '#'
            [[ -z "$key" || "$key" =~ ^# ]] && continue
            echo "$key=$val" >> "${{ github.env }}"
          done < .ci/ci-vars.env

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@main

      - name: Compile RPCS3
        shell: pwsh
        run: msbuild rpcs3.sln /p:Configuration=Release /v:minimal /p:Platform=x64 /p:PreferredToolArchitecture=x64 /p:CLToolPath=${{ env.CCACHE_BIN_DIR }} /p:UseMultiToolTask=true /p:CustomAfterMicrosoftCommonTargets="${{ github.workspace }}\buildfiles\msvc\ci_only.targets"

      - name: Pack up build artifacts
        run: |
          mkdir -p "${{ env.BUILD_ARTIFACTSTAGINGDIRECTORY }}"
          .ci/deploy-windows.sh

      - name: Upload artifacts (7z)
        uses: actions/upload-artifact@main
        with:
          name: RPCS3 for Windows (MSVC)
          path: ${{ env.BUILD_ARTIFACTSTAGINGDIRECTORY }}
          compression-level: 0
          if-no-files-found: error

      - name: Save Build Ccache
        if: github.ref == 'refs/heads/master'
        uses: actions/cache/save@main
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ steps.restore-build-ccache.outputs.cache-primary-key }}

      - name: Save Dependencies Cache
        if: github.ref == 'refs/heads/master'
        uses: actions/cache/save@main
        with:
          path: ${{ env.DEPS_CACHE_DIR }}
          key: ${{ steps.restore-dependencies-cache.outputs.cache-primary-key }}
